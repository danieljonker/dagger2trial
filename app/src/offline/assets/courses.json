{
  "courses": [
    {
      "instructors": [],
      "subtitle": "Build a Search Engine & a Social Network",
      "key": "cs101",
      "image": "https://lh5.ggpht.com/ITepKi-2pz4Q6lrLfv6QDNViEGIfxyupzgQwx1YgS4L8m3MFITBKWDpaZb_VoAP-zV3bEEoIbFY7mauj8HM=s0#w=1724&h=1060",
      "expected_learning": "You’ll learn the programming language Python, and you’ll explore foundational concepts in computer science. Most importantly, you’ll start thinking like a software engineer by solving interesting problems (how to build a web crawler or a social network) using computer programming. \ \ This course is a first step into the world of computer science, and whether you want to become a software engineer, or collaborate with software engineers, this course is for you. You’ll be prepared for intermediate-level computer science classes when you’ve mastered the concepts covered in this course.\ \ ###Build a Search Engine\ Throughout this course, you’ll build a search engine by learning about and producing key search engine components including a crawler, an index and a page rank algorithm. As you build these pieces, you’ll be learning about and practicing computer science skills that will ready you for intermediate level computer science courses. \ \ ###Build a Social Network\ At the end of the course we will give you a set of relationships (i.e. strings of phrases like “Dave likes Andy, Kathleen and Kristy”) and you will use your new computer science skills to organize these relationships into a social network. With your new social network, you can explore relationships and gain insight into how you fit into your own social networks.",
      "featured": false,
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=Pm_WAWZNbdA"
      },
      "title": "Intro to Computer Science",
      "required_knowledge": "There is no prior computer programming knowledge needed for this course. Beginners are welcome!",
      "syllabus": "###Lesson 1: How to Get Started\ \ - Interview with Sergey Brin\ - Getting Started with Python\ - Processors\ - Grace Hopper\ - Variables\ - Strings and Numbers\ - Indexing Strings\ - String Theory\ \ ###Lesson 2: How to Repeat\ \ - Introducing Procedures\ - Sum Procedure with a Return Statement\ - Equality Comparisons\ - If Statements\ - Or Function\ - Biggest Procedure\ - While Loops\ - Print Numbers\ \ ###Lesson 2.5: How to Solve Problems\ \ - What are the Inputs\ - Algorithm Pseudocode\ - Optimizing\ \ ###Lesson 3: How to Manage Data\ \ - Nested Lists\ - A List of Strings\ - Aliasing\ - List Operations\ - List Addition and Length\ - How Computers Store Data\ - For Loops\ - Popping Elements\ - Crawl Web\ \ ### Lesson 4: Responding to Queries\ \ - Data Structures\ - Lookup\ - Building the Web Index\ - Latency\ - Bandwidth\ - Buckets of Bits\ - Protocols\ \ ### Lesson 5: How Programs Run\ \ - Measuring Speed\ - Spin Loop\ - Index Size vs. Time\ - Making Lookup Faster\ - Hash Function\ - Testing Hash Functions\ - Implementing Hash Tables\ - Dictionaries\ - Modifying the Search Engine\ \ ### Lesson 6: How to Have Infinite Power\ \ - Infinite Power\ - Counter\ - Recursive Definitions\ - Recursive Procedures\ - Palindromes\ - Recursive v. Iterative\ - Divide and Be Conquered \ - Ranking Web Pages\ \ ### Lesson 7: Past, Present, and the Future of Computing\ \ - Past of Computing\ - Computer History Museum \ - First Hard Drive\ - Search Before Computers\ - Present of Computing\ - Slac and Big Data\ - Open Source\ - Future of Computing\ - Text Analysis\ - Energy Aware Computing\ - Computer Security\ - Quantum Computing",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-computer-science--cs101?utm_medium=referral&utm_campaign=api",
      "project_name": "Create and Analyze a Social Network",
      "full_course_available": true,
      "faq": "### When does the course begin?\ \ This class is self paced. You can begin whenever you like and then follow your own pace. It’s a good idea to set goals for yourself to make sure you stick with the course.\ \ ### How long will the course be available?\ \ This class will always be available! \ \ ### How do I know if this course is for me?\ \ Take a look at the “Class Summary,” “What Should I Know,” and “What Will I Learn” sections above. If you want to know more, just enroll in the course and start exploring.\ \ ### Can I skip individual videos? What about entire lessons?\ \ Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you’re confused, you can always go back and watch something that you skipped.\ \ ### What are the rules on collaboration?\ \ Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \ \ ### Why are there so many questions?\ \ Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\ \ ### What should I do while I’m watching the videos?\ \ Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": [
        "Data Science",
        "Web Development",
        "Software Engineering"
      ],
      "banner_image": "https://lh5.ggpht.com/UCA7Y75zHA5jwS9o5dmeAn8TlBiTZZbFQZ3ktLaVnfgSHNELh1rquY1dbzOB6BaYyXP0UMNNazdauW_g1w=s0#w=4680&h=968",
      "short_summary": "Learn key computer science concepts in this introductory Python course. You'll learn by doing, and will build your own search engine and social network.",
      "slug": "intro-to-computer-science--cs101",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        },
        {
          "bio": "Jessica fell in love with teaching as a wee child when she forced her younger siblings to play \"school\" and learn all the things she mastered during the past school year. Armed with a BS in Electrical Engineering Technology from the University of Central Florida, she spent her early career teaching teachers how to use microcontrollers and robotics in the classroom. She also has her ME in Engineering Management from the University of Wisconsin-Madison. In her spare time, Jessica enjoys reading, skiing, and traveling the world.",
          "image": "https://lh3.ggpht.com/20ptLSWskAtxwXpc0GiQI0TTYbgQhGnewe8LgL8WRkyCDGS1_4PUfGxA4wz-UlFr3DiwYmh4GuTMn7YB2f8=s0#w=2000&h=2000",
          "name": "Jessica Uelmen"
        }
      ],
      "subtitle": "Not Your Typical Intro to Web Dev",
      "key": "ud304",
      "image": "https://lh6.ggpht.com/KHjK8i_BBLXVYAverR73RvYt06rPk7JnKQWcUIyzMYUnVSPL_zC_asTuM-e69zkibagGRnC5u-bB04nPTQ=s0#w=1278&h=786",
      "expected_learning": "Front-end Web Developers must have a fundamental understanding of HTML and CSS, which we’ll accomplish in this course by converting digital design mockups into static web pages. To build the web pages you will use HTML, CSS and Bootstrap, the popular Twitter CSS framework.\ \ After completing this course you will be able to build a responsive portfolio site with your own CSS framework. You'll also have the functionality in place to add future projects to your portfolio. Most importantly, you will have an understanding of the DOM and how HTML, CSS, and JavaScript relate to each other.\ \ This course's project is part of our <a href=\"https://www.udacity.com/course/nd001\" target=\"_blank\">Front-End Web Developer</a> Nanodegree.",
      "featured": true,
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to HTML and CSS",
      "required_knowledge": "You should have ability and skills to download and use a text editor for editing your web pages, we recommend <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a> or <a href=\"https://atom.io/\" target=\"_blank\">Atom</a>. You can use another text editor if you want, but it should have the ability to highlight code syntax for your own convenience.\ \ You should be able to download and install <a href=\"https://www.google.com/intl/en/chrome/browser/\" target=\"_blank\">Google Chrome</a>, which is the browser we’ll be exploring developer tools with in this course.",
      "syllabus": "### Lesson 1 - <a href=\"https://udacity.com/course/viewer#!/c-ud304/l-2617868617\">From Design to Code</a>\ \ Diligently employ a code/test/refine strategy as you precisely and deliberately translate initial design documents into static web pages. You'll also investigate the Document Object Model (DOM) and its implications for web development.\ \ ### Lesson 2 - <a href=\"https://udacity.com/course/viewer#!/c-ud304/l-2810388540\">Your Own Framework</a>\ \ Take pride in creating and personalising your own multi-platform, responsive CSS framework for publishing your professional portfolio projects to the web.\ \ ### Lesson 3 - <a href=\"https://udacity.com/course/viewer#!/c-ud304/l-2794148535\">Learning and Using Bootstrap</a>\ \ Strategically investigate an existing professional CSS framework as you use it to build a website using responsive design principles while maintaining code readability.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-html-and-css--ud304?utm_medium=referral&utm_campaign=api",
      "project_name": "Portfolio Mock Up to HTML",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh5.ggpht.com/hsbaPB2ONN_pDAljOlO6i5gWjneQcRnVnn5j4vmYqoqkASy2gcfKnUSogEmFcXAVwZFx1ZL2Pen-toR1zQNS=s0#w=4680&h=968",
      "short_summary": "Learn how to convert digital design mockups into static web pages and how to build a responsive portfolio site to showcase your work.",
      "slug": "intro-to-html-and-css--ud304",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "HTML and CSS are markup languages and the building blocks that make up the web. This course is called \"Not your Typical Intro...\" because it does not follow the usual pattern of other courses and tutorials that you find on the Internet. Usually HTML and CSS are taught with a focus on language syntax. But knowing syntax alone does not enable you to create a webpage from a design. You need to know where to start and how to approach the task, in other words - you need to learn how to think like a front-end developer. \ \ In this course you will learn how to convert digital design mockups into static web pages. We will teach you how to approach page layout, how to break down a design mockup into page elements, and how to implement that in HTML and CSS.\ \ You will also learn about responsive design techniques, which are increasingly important in a world where mobile devices and TV screens are used more and more often to look for information and entertainment.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        },
        {
          "bio": "James Williams first fell in love with teaching while working as an instructor at a computer camp. He runs obstacle course/adventure races in his spare time and is the author of HTML5 Game Programming, which has been translated into Chinese and Korean. He holds degrees in Computer Science (BA, MS) and French (BA).",
          "image": "https://lh3.ggpht.com/XG9jWlrbNqQXp9OJjfasItFVPEVTXV0AMYOsNcydhnLHJw3CKByD4kqHOiJJIv4hBDodwry36kEKkWVkbqg=s0#w=442&h=442",
          "name": "James Williams"
        }
      ],
      "subtitle": "The Programming Language of the Web",
      "key": "ud804",
      "image": "https://lh6.ggpht.com/TY7yDlB-w_lMOQHAtOBZjnn-hYAsggB_9TX8TcX1XeR1kTYF4HEggwsxGKd8Ri3rag1USR0gPQvcZvJN5cw=s0#w=788&h=484",
      "expected_learning": "Today, front-end developers work with web designers to create the interactive experiences that make the web the addictive playground we know and love. As the size and influence of the web have expanded, so has the importance of ensuring a website offers users an unforgettable experience.\ \ Perhaps your end goal is to create a HTML5 game, code the front-end for an app idea you have, or maybe you want to use one of the growing set of libraries that let you compile code written in another language or for another platform down to JavaScript. With JavaScript, you can do all these things and more.\ \ ###Project\ You will create an interactive résumé that you can share to the world and show your growing skills at the time.\ \ Having a good résumé is a key component of securing a better job. We'll give you the template styles and code to create a modern and mobile friendly résumé (also called a curriculum vitae/CV outside the United States) that you can modify and customize.",
      "featured": false,
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "JavaScript Basics",
      "required_knowledge": "We expect that you have *some* experience programming in another language, such as Python, and can describe concepts like loops, functions and objects. Our \ <a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Intro to Computer Science</a>\ and <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Fundamentals with Python</a> courses are great places to get started.\ \ While we do describe the underlying principles behind basic programming techniques, this course focuses on implementing the principles with JavaScript rather than the principles themselves.\ \ HTML and CSS are not required, however, knowledge of CSS will help you customize your résumé project.",
      "syllabus": "### Lesson 1: Getting Up and Running\ \ Learn about the tools we'll be using throughout the course and begin modifying web pages with a little bit of code.\ \ - Introduction of résumé project\ - Components of the résumé\ - Introduction to browser developer tools\ - Running commands on the console\ - Appending elements to the page\ \ ### Lesson 2: Data Types\ \ Dig deeper into JavaScript as we introduce you to the building blocks of the language as you write more complex code using variables and advanced data structures like JSON, Objects, and Arrays.\ \ - Variables\ - Strings\ - Evaluating values\ - Arrays\ - Objects\ - JSON\ - Validating JSON\ \ ### Lesson 3: Flow Control\ \ Finish the résumé while you learn how to make your code more modular and reusable by using conditional statements, loops, and functions.\ \ - Conditional statements\ - For and while loops\ - Functions\ - Encapsulation",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/javascript-basics--ud804?utm_medium=referral&utm_campaign=api",
      "project_name": "Interactive Resume",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh4.ggpht.com/VklYwGjNp3Cmv8FbPSJGywEQGAwuOpBdIml1I2ZjgpfdJUKJ6pjPKAr1ZnkRnJlq5FXpxqoF68lOaOpiblSN=s0#w=4680&h=968",
      "short_summary": "Learn JavaScript syntax and coding conventions that web developers use to create interactive and dynamic websites while you create an online résumé for your portfolio.",
      "slug": "javascript-basics--ud804",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "We're here to get you started with JavaScript!\ In the twenty plus years since its inception, JavaScript has become the lingua franca of the web, that's to say, it's become the main tool to create interactive content on the Internet.\ \ In this course, you'll explore the JavaScript programming language by creating an interactive version of your résumé. You’ll learn the JavaScript programming fundamentals you need while building new elements and sections to enhance your résumé.\ \ This course is also a part of our <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> Nanodegree.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Before joining Udacity, Caroline worked as a Software Engineer at Quixey, a startup building a search engine for apps. While receiving her undergraduate degree from Carnegie Mellon, she was a TA for six different courses, and that same love for teaching later led her to join Udacity. Outside of work, she likes reading fiction, playing board games, and drinking bubble tea.",
          "image": "https://lh4.ggpht.com/BguyLDX-W3dEJFcXQaQZ4xLVvxpjKrwzC6CJyDbAGOm_BtIxgKNk94sq4Wxuhb4621aV6d5XFQYYOc8Jrck=s0#w=1476&h=1476",
          "name": "Caroline Buckey"
        },
        {
          "bio": "Sarah Spikes earned her BS and MS in Computer Science at Stanford, where she spent a lot of time as a Teaching Assistant. She spent two years at Google as a Software Engineer before following her passion for teaching by joining Udacity. In her spare time, Sarah enjoys performing musical theatre, making sorbet and rock climbing.",
          "image": "https://lh5.ggpht.com/Kh0GwczQEDUTBJkjELrfF4pTNHi4HQsWmiI68bY9SlUfAU0xKidGGJjeVAt58aBf6g5T4Z5uqP7mRG2ZXEQ=s0#w=138&h=138",
          "name": "Sarah Spikes"
        }
      ],
      "subtitle": "Version Control for Code",
      "key": "ud775",
      "image": "https://lh5.ggpht.com/y6QqOHLmFIoeSfv2eTSAkqKxFiWVXaWvpIfInxf9nhf_SPBFf5rXElThQTZbsUFram7UEb8eN2gAUe9fLE5H=s0#w=1725&h=1060",
      "expected_learning": "Git is used by many tech companies, and a public GitHub profile serves as a great portfolio for any developer. But more than that, you’ll establish an efficient programming workflow that allows you to:\ \ * Keep track of multiple versions of a file\ * Track bugs by reverting to previous working versions of a file\ * Seamlessly collaborate with other developers on a project\ \ The use of tools like Git and GitHub is essential for collaborating with other developers in most professional environments.",
      "featured": true,
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "How to Use Git and GitHub",
      "required_knowledge": "While this course does not involve programming, students should have some experience with a programming or markup language.\ Additionally, students should be familiar with navigating the command line. If unfamiliar or if you want a refresher, check out [these instructions](https://www.udacity.com/wiki/ud775/command-line-instructions).",
      "syllabus": "###Lesson 1: Navigating a Commit History\ In this lesson, you’ll learn about a few different types of version control systems and discover what makes Git a great version control system for programmers. You’ll also get practice using Git to view the history of an existing project. You’ll learn to see all the versions that have been saved, checkout a previous version, and compare two different versions.\ ###Lesson 2: Creating and Modifying a Repository\ In this lesson, you’ll learn how to create a repository and save versions of your project. You’ll learn about the staging area, committing your code, branching, and merging, and how you can use these to make you more efficient and effective.\ ###Lesson 3: Using GitHub to Collaborate\ In this lesson, you’ll get practice using GitHub or other remote repositories to share your changes with others and collaborate on multi-developer projects. You’ll learn how to make and review a pull request on GitHub. Finally, you’ll get practice by collaborating with other Udacity students to write a create-your-own-adventure story.\ \ ###Project: Contribute to a Live Project\ Students will publish a repository containing their reflections from the course and submit a pull request to a collaborative Create-Your-Own-Adventure story.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/how-to-use-git-and-github--ud775?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": [
        "Web Development",
        "Software Engineering"
      ],
      "banner_image": "https://lh3.ggpht.com/6ATWYiVnh23EJmmyQSs-IkIIiWbIfBhnzEdkjNgXlwJsuQdcKJLgY5A4Mq9zhx0uFUoLuj0SCSUP5C4xMw0=s0#w=4680&h=968",
      "short_summary": "Learn to use version control, an important tool for any developer. The course will focus on Git, a specific version control system, and GitHub, a collaboration platform.",
      "slug": "how-to-use-git-and-github--ud775",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "Effective use of version control is an important and useful skill for any developer working on long-lived (or even medium-lived) projects, especially if more than one developer is involved. This course, *built with input from GitHub*, will introduce the basics of using version control by focusing on a particular version control system called Git and a collaboration platform called GitHub.\ \ This course is part of the <a href=\"https://www.udacity.com/course/nd001\" target=\"_blank\">Front End</a> and <a href=\"https://www.udacity.com/course/nd004\" target=\"_blank\">Full Stack Nanodegrees</a>..",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Cay grew up in Northern Germany and attended the Christian-Albrechts-Universität in Kiel, a harbor town on the Baltic sea. He received a M.S. in computer science from Syracuse University, and a Ph.D. in mathematics from the University of Michigan in Ann Arbor. For four years, he was VP and CTO of an Internet startup that went from 3 people in a tiny office to a public company. He now teaches computer science at San Jose State University. In his copious spare time, he writes books and articles on programming languages and computer science education.\ \ Please note that the Coaching, project feedback, and Verified Certificate are provided by and through Udacity. These services are specifically not provided by or affiliated with Cay Horstmann, San Jose State University, or any publisher of Dr. Horstmann's other textbooks.",
          "image": "https://lh5.ggpht.com/b-pMaSLEZOPel9P2s4AIoALSjk5NqFZXXltNtCVC7LYcptKvUkFnL8p7uEKqSmJVTkTYe5Ibq6xnnX_1dmc=s0#w=270&h=270",
          "name": "Cay Horstmann"
        }
      ],
      "subtitle": "Building Programs with Classes & Objects",
      "key": "cs046",
      "image": "https://lh4.ggpht.com/9ytiUdz0QYHwuMJFTXcNXZn4FctGW6Zszm7Aj5s7mXHHXsapIKYPL08vPWeghAjF2QmuhPiYCU2Q3kNeW7w=s0#w=1725&h=1060",
      "expected_learning": "Java is one of the most popular programming languages used by software developers today. It is the core language used in developing Android apps, and is also commonly used in back-end web development. If you’re new to programming and want to enter either of these fields, this course is a great place to get started.\ \ Even if you don’t have a career trajectory in mind, Java programming is a great option for first-time coders due to its popularity and ease of use. This course will provide you with a solid foundation in computer science and Object Oriented Programming concepts, as well as set you on the path for success as a software engineer.",
      "featured": false,
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=Wsp5Rrenoq4"
      },
      "title": "Intro to Java Programming",
      "required_knowledge": "No prior programming experience and knowledge is assumed or needed. Beginners welcome!",
      "syllabus": "### Lesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming Environment\ \ ### Lesson 2: Introduction to Classes and Objects\ \ ### Lesson 3: Graphics\ \ ### Lesson 4: Fundamental Data Types\ \ ### Lesson 5: Decisions\ \ ### Lesson 6: Iterations\ \ ### Lesson 7: Arrays, ArrayLists and Simple Array Algorithms\ \ ### Lesson 8: Methods (Parameter Passing, Instance vs. Static Methods)\ \ ### Lesson 9: Inheritance",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-java-programming--cs046?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/MpxH41jmm6mn0XOaVq6daHTknCMoI_ccrmrbjtyvWJ3ukfUQsumG_Wn50WWm-WH4499D25Vg4BR96Oq-F-M=s0#w=130&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": [
        "Software Engineering",
        "Android"
      ],
      "banner_image": "https://lh3.ggpht.com/AdAALPYhCsWuIvDl0ZY6zIW23B58wqCiZYuQZPVIAeR86ylThoImtG_DRuk2gvUfMkaRS3sfTzn21wnAmHM=s0#w=4680&h=968",
      "short_summary": "Learn essential computer science and object-oriented programming concepts in this introductory Java course.",
      "slug": "intro-to-java-programming--cs046",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "After obtaining a bachelor’s degree in computer science from the University of Texas at Austin, Kunal worked as a programmer for three years, but then decided to switch gears to education. He taught middle school science, worked with Google on a distance learning initiative, and eventually earned a master’s degree in educational technology from Stanford University before joining Udacity.",
          "image": "https://lh5.ggpht.com/9ybNWBjttm9bN1UYNLc7VzAN2mDZ5OH8ufgw35GlEmdzhDlP1ys8NmIluwYIRq1rljJPxqlg0Fl8YWfWCw=s0#w=150&h=150",
          "name": "Kunal Chawla"
        }
      ],
      "subtitle": "Learn Object-Oriented Programming",
      "key": "ud036",
      "image": "https://lh5.ggpht.com/MNie9OxrtYLt5C_QMgezV9fYYR-07-U9z2AkqwKQhDIOguka15xhxrNafPFK6X538EUS6j0vJ193gEGLOpI=s0#w=1757&h=1080",
      "expected_learning": "You should take this course if you want to build awesome projects, while writing only a few lines of code. Here are some of them:\ \ - **Project Take a Break**: Do you know a friend who works too many hours? We will write a program that schedules breaks throughout the day -- reminding your friend to listen to music, get up and dance to their favorite song, or just walk away from the computer every once in awhile. <a href=\"http://youtu.be/C29aerpwkc8\" target=\"_blank\">http://youtu.be/C29aerpwkc8</a>\ - **Project Profanity Editor**: Imagine it’s late at night and you get an email from your boss, requesting your help with something. You reply, “I can take a shot at it” but accidentally end up including an awkward word (sh*t). Oops. We will write a python program that detects curse words, and saves clumsy email writers from embarrassing moments. <a href=\"http://youtu.be/Rvj2UI-wVXA\" target=\"_blank\">http://youtu.be/Rvj2UI-wVXA</a>\ - **Movie Website**: We will learn how to make an awesome webpage that lists your favorite movies and shows their trailers. \ <a href=\"https://www.youtube.com/watch?v=X0FoelOIZM0&t=1m24s\" target=\"_blank\">https://www.youtube.com/watch?v=X0FoelOIZM0&t=1m24s</a>\ <br />\ \ While building these projects we will learn about a programming technique that is used by software engineers on a daily basis; it is called Object-Oriented Programming. \ \ Finally, we will work together to get better at reading help documents and using other people’s code almost like lego blocks to build our programs. By building these projects, you’ll become more confident in your ability to code and transition from “programming looks like magic” to “oh, I can do that.”",
      "featured": false,
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=bwq2W6XUvyg"
      },
      "title": "Programming Foundations with Python",
      "required_knowledge": "We require some familiarity with the following programming ideas in any computer language (C++, Java, Python, English etc.):\ \ - if statements\ - loops\ - functions\ \ \ Don’t worry if you feel you need a refresher on any of these programming ideas. That’s ok. We will provide information that will remind you how to use these ideas when building programs.",
      "syllabus": "### Lesson 0: Introduction (30 min)\ We will begin with an introduction from the instructor. More specifically, we will talk about the projects we will build and the ideas we will learn in this course. Then we will conduct a short test to ensure you have all the prerequisites necessary for the course. Finally, we will work together to download Python on your computer.\ \ ### Lesson 1: Using Functions (3.5 hours)\ We will use functions (webbrowser.open and os.rename) from the Python Standard Library to build two projects in this lesson. After that we will present a scenario where using functions will not present a very elegant solution; this will illuminate the need for a new programming tool called Classes.\ \ ### Lesson 2: Using Classes (5 hours)\ Here we will learn about important object-oriented programming concepts like classes and instances. We will build three cool projects while using classes. These include drawing shapes with Turtle, sending text messages with Twilio and checking curse words with a function called open.\ \ We will leverage modules from within the Python Standard Library and also learn to download and use an external Python package (twilio).\ \ ### Lesson 3: Making Classes (5 hours)\ In this lesson we will learn to create our first class. While doing this we will build a website that plays trailers of your favorite movies. Here are some of the programming ideas we will learn in this lesson:\ \ - How to create a class\ - How to instantiate an object\ - How to access class attributes and methods \ - What is the self keyword\ - What are constructors (\\__init__)\ - What are DocStrings\ - How to create and access Class Variables\ - How does Inheritance work\ - How to override methods \ \ ### Final Project (6 hours)\ Here, you will use the skills learned in this course to identify a problem statement and idea for a project. You will then identify step-by step directions (in simple English) to design a solution for the previously identified problem. Finally, you will use this design and your newly learned object-oriented programming skills to write code to realize your project.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/programming-foundations-with-python--ud036?utm_medium=referral&utm_campaign=api",
      "project_name": "Explore Python to Build Your Own Program",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": [
        "Web Development",
        "Software Engineering"
      ],
      "banner_image": "https://lh3.ggpht.com/pmJ91CZPKtNWq_0KpHhWnmQ1xr2_lmwvm-dfEqnz3hxBwV9qrfO4Q9MSNN19mkCb6CPm9cJPzQe7fd5T5pU=s0#w=4680&h=968",
      "short_summary": "Introductory programming class to learn Object-Oriented Programming, a must-have technique to reuse and share code easily. Learn by making projects that spread happiness!",
      "slug": "programming-foundations-with-python--ud036",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "In this introductory programming class, you’ll learn Object-Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You’ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts. \ \ We’ve heard that programming can be intimidating for newcomers, and we’ve created this course to make sure that you have a great learning experience! You’ll learn ***actively*** with our mini projects (see the awesome list below), which you’ll be able to share proudly with your friends. You’ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way. \ \ You’ll pick up some great tools for your programming toolkit in this course! You will: \ \ - Start coding in the programming language Python;\ - Reuse and share code with Object-Oriented Programming;\ - Create and share amazing, life-hacking projects! \ \ \ This introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object-Oriented Programming will propel your career in tech forward, and it’s also a great way to learn how software engineers think about solving problems.\ \ This course is also a part of our <a href=\"https://www.udacity.com/course/nd004\" target=\"_blank\">Full Stack Web Developer</a> Nanodegree.",
      "expected_duration": 6
    }
  ]
}